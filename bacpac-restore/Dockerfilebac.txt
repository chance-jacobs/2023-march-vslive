# Latest Sql Server version from microsoft repository
FROM mcr.microsoft.com/mssql/server:2022-latest

USER root

# Install Unzip
RUN apt-get update
RUN apt-get install unzip -y

RUN wget https://dot.net/v1/dotnet-install.sh -O dotnet-install.sh
RUN chmod +x ./dotnet-install.sh
RUN ./dotnet-install.sh --version latest
#RUN dotnet tool install -g microsoft.sqlpackage



# Install SQLPackage for Linux and make it executable
#RUN wget -progress=bar:force -q -O sqlpackage.zip https://go.microsoft.com/fwlink/?linkid=873926 
#RUN unzip -qq sqlpackage.zip -d /opt/sqlpackage
#RUN chmod +x /opt/sqlpackage/sqlpackage

# Add the DACPAC to the image
COPY sfwmdc43dbdev-2023-3-29-9-28.bacpac /tmp/db.dacpac

# Configure external build arguments to allow configurability.
ARG DBNAME=Database
ARG PASSWORD

# Configure the required environmental variables
ENV ACCEPT_EULA=Y
ENV SA_PASSWORD=$PASSWORD

# Launch SQL Server, confirm startup is complete, deploy the DACPAC, then terminate SQL Server.
# See https://stackoverflow.com/a/51589787/488695
#RUN ( /opt/mssql/bin/sqlservr & ) | grep -q "Service Broker manager has started" && 


/opt/sqlpackage/sqlpackage /a:Publish /tsn:. /tdn:${DBNAME} /tu:sa /tp:$SA_PASSWORD /sf:/tmp/db.dacpac && rm /tmp/db.dacpac && pkill sqlservr

#docker build --build-arg PASSWORD=YourS3cureP@ass -t northwind:1.0 .


# ls
bin  boot  devdotnet-install.sh  etchome  lib  lib32  lib64  libx32  mediamnt  opt  procroot  run  sbin  srv  sys  tmpusr  var
# cd ..
# ls
bin  boot  devdotnet-install.sh  etchome  lib  lib32  lib64  libx32  mediamnt  opt  procroot  run  sbin  srv  sys  tmpusr  var
# export DOTNET_ROOT=$HOME/.dotnet
# dotnet
/bin/sh: 21: dotnet: not found
# export PATH=$PATH:$HOME/.dotnet:$HOME/.dotnet/tools 
# dotnet

Usage: dotnet [options]
Usage: dotnet [path-to-application]

Options:
  -h|--help         Display help.
  --info            Display .NET information.
  --list-sdks       Display the installed SDKs.
  --list-runtimes   Display the installed runtimes.

path-to-application:
  The path to an application .dll file to execute.
# dotnet tool install -g microsoft.sqlpackage

Welcome to .NET 6.0!
---------------------
SDK Version: 6.0.407

Telemetry
---------
The .NET tools collect usage data in order to help us improve your experience. It is collected by Microsoft and shared with the community. You can opt-out of telemetry by setting the DOTNET_CLI_TELEMETRY_OPTOUT environment variable to '1' or 'true' using your favorite shell.

Read more about .NET CLI Tools telemetry: https://aka.ms/dotnet-cli-telemetry

----------------
Installed an ASP.NET Core HTTPS development certificate.
To trust the certificate run 'dotnet dev-certs https --trust' (Windows and macOS only).
Learn about HTTPS: https://aka.ms/dotnet-https
----------------
Write your first app: https://aka.ms/dotnet-hello-world
Find out what's new: https://aka.ms/dotnet-whats-new
Explore documentation: https://aka.ms/dotnet-docs
Report issues and find source on GitHub: https://github.com/dotnet/core
Use 'dotnet --help' to see available commands or visit: https://aka.ms/dotnet-cli
--------------------------------------------------------------------------------------
You can invoke the tool using the following command: sqlpackage
Tool 'microsoft.sqlpackage' (version '161.8089.0') was successfully installed.
# /opt/mssql/bin/sqlserver
/bin/sh: 25: /opt/mssql/bin/sqlserver: not found
# ^[OA^[OD
/bin/sh: 26: AD: not found
# cd /opt
# ls
microsoft  mssql  mssql-extensibility  mssql-tools
# cd mssql
# cd bin
# ls
ag-helper      compress-dump.sh  exthost     generate-sql-dump.sh  launchpadmssql-conf  permissions_check.sh  sqliosim
checkinstallextensibility.sh  crash-support-functions.sh  fci-helper  handle-crash.sh    launchpaddpaldumper   setnetbr  sqlservr
# sqlservr
/bin/sh: 32: sqlservr: not found
# ./sqlservr 
2023-03-31 19:16:27.93 Server      Microsoft SQL Server 2022 (RTM-CU2) (KB5023127) - 16.0.4015.1 (X64) 
Feb 27 2023 15:40:01 
Copyright (C) 2022 Microsoft Corporation
Developer Edition (64-bit) on Linux (Ubuntu 20.04.5 LTS) <X64>
2023-03-31 19:16:27.94 Server      UTC adjustment: 0:00
2023-03-31 19:16:27.94 Server      (c) Microsoft Corporation.
2023-03-31 19:16:27.94 Server      All rights reserved.
2023-03-31 19:16:27.94 Server      Server process ID is 504.
2023-03-31 19:16:27.94 Server      Logging SQL Server messages in file '/var/opt/mssql/log/errorlog'.
2023-03-31 19:16:27.95 Server      Registry startup parameters: 
 -d /var/opt/mssql/data/master.mdf
 -l /var/opt/mssql/data/mastlog.ldf
 -e /var/opt/mssql/log/errorlog
2023-03-31 19:16:27.95 Server      Error: 17113, Severity: 16, State: 1.
2023-03-31 19:16:27.95 Server      Error 5(Access is denied.) occurred while opening file '/var/opt/mssql/data/master.mdf' to obtain configuration information at startup. An invalid startup option might have caused the error. Verify your startup options, and correct or remove them if necessary.
# sqlpackage
SqlPackage: Command-line tool for creating and deploying SQL Server databases and DACPAC packages. (16.1.8089.0)
Copyright (c) 2023 Microsoft Corporation.  All rights reserved.

Help for dynamic property usage.
/@<file>:<string>
     Read response file for more options.

/help:[True|False]
      (short form /?)

/version:[True|False]
     Display the tool version in use.


Help for command actions.
/AccessToken:<string>
     Specifies the token-based authentication access token to use when connect to the target database. (short form /at)

/Action:{Extract|DeployReport|DriftReport|Publish|Script|Export|Import}
     Specifies the action to be performed. (short form /a)

/AzureCloudConfig:<string>
     Specifies the custom endpoints for connecting to Azure Active Directory in the format: "AzureActiveDirectoryAuthority={value};DatabaseServicePrincipalName={value}". (short form /acc)

/AzureKeyVaultAuthMethod:{Interactive|ClientIdSecret}
     Specifies what authentication method is used for accessing Azure Key Vault if a publish operation includes modifications to an encrypted table/column. (short form /akv)

/ClientId:<string>
     Specifies the Client ID to be used in authenticating against Azure Key Vault, when necessary (short form /cid)

/DeployReportPath:<string>
     Specifies an optional file path to output the deployment report xml file. (short form /drp)

/DeployScriptPath:<string>
     Specifies an optional file path to output the deployment script. For Azure deployments, if there are TSQL commands to create or modify the master database, a script will be written to the same path but with
     "Filename_Master.sql" as the output file name. (short form /dsp)

/Diagnostics:[True|False]
     Specifies whether diagnostic logging is output to the console. Defaults to False. (short form /d)

/DiagnosticsFile:<string>
     Specifies a file to store diagnostic logs. (short form /df)

/MaxParallelism:<int>
     Specifies the degree of parallelism for concurrent operations running against a database. The default value is 8. (short form /mp)

/ModelFilePath:<string>
     Specifies the file path to override the model.xml in the source file. Use of this setting may result in deployment failure and/or unintended data loss. This setting is intended only for use when troubleshooting
     issues with publish, import, or script generation. (short form /mfp)

/OutputPath:<string>
     Specifies the file path where the output files are generated. (short form /op)

/OverwriteFiles:[True|False]
     Specifies if SqlPackage.exe should overwrite existing files. Specifying false causes SqlPackage.exe to abort action if an existing file is encountered. Default value is True. (short form /of)

/Profile:<string>
     Specifies the file path to a DAC Publish Profile. The profile defines a collection of properties and variables to use when generating outputs. (short form /pr)

/Properties:{PropertyName}={Value}
     Specifies a name-value pair for an action specific property; {PropertyName}={Value}. Refer to the help for a specific action to see that actionâ€™s property names.  Example: `sqlpackage.exe /Action:Publish /?`.
     (short form /p)

/Quiet:[True|False]
     Specifies whether detailed feedback is suppressed. Defaults to False. (short form /q)

/ReferencePaths:{PropertyName}={Value}
     Specifies the additional directories to search for .dacpac references. (short form /rp)

/Secret:<string>
     Specifies the Client Secret to be used in authenticating against Azure Key Vault, when necessary (short form /secr)

/SourceConnectionString:<string>
     Specifies a valid SQL Server/Azure connection string to the source database. If this parameter is specified, it shall be used exclusively of all other source parameters. (short form /scs)

/SourceDatabaseName:<string>
     Defines the name of the source database. (short form /sdn)

/SourceEncryptConnection:{Optional|Mandatory|Strict|True|False}
     Specifies if SQL encryption should be used for the source database connection. (short form /sec)

/SourceFile:<string>
     Specifies a source file to be used as the source of action instead of a database. For the Publish and Script actions, SourceFile may be a .dacpac file or a schema compare .scmp file. If this parameter is used, no
     other source parameter is valid. (short form /sf)

/SourceHostNameInCertificate:<string>
     Specifies value that is used to validate the source SQL Server TLS/SSL certificate when the communication layer is encrypted by using TLS. (short form /shnic)

/SourcePassword:<string>
     For SQL Server Auth scenarios, defines the password to use to access the source database. (short form /sp)

/SourceServerName:<string>
     Defines the name of the server hosting the source database. (short form /ssn)

/SourceTimeout:<int>
     Specifies the timeout for establishing a connection to the source database in seconds. (short form /st)

/SourceTrustServerCertificate:[True|False]
     Specifies whether to use TLS to encrypt the source database connection and bypass walking the certificate chain to validate trust. (short form /stsc)

/SourceUser:<string>
     For SQL Server Auth scenarios, defines the SQL Server user to use to access the source database. (short form /su)

/TargetConnectionString:<string>
     Specifies a valid SQL Server/Azure connection string to the target database. If this parameter is specified, it shall be used exclusively of all other target parameters. (short form /tcs)

/TargetDatabaseName:<string>
     Specifies an override for the name of the database that is the target of SqlPackage.exe Action. (short form /tdn)

/TargetEncryptConnection:{Optional|Mandatory|Strict|True|False}
     Specifies if SQL encryption should be used for the target database connection. (short form /tec)

/TargetFile:<string>
     Specifies a target file (i.e., a .dacpac files) to be used as the target of action instead of a database. If this parameter is used, no other target parameter shall be valid. This parameter shall be invalid for
     actions that only support database targets. (short form /tf)

/TargetHostNameInCertificate:<string>
     Specifies value that is used to validate the target SQL Server TLS/SSL certificate when the communication layer is encrypted by using TLS. (short form /thnic)

/TargetPassword:<string>
     For SQL Server Auth scenarios, defines the password to use to access the target database. (short form /tp)

/TargetServerName:<string>
     Defines the name of the server hosting the target database. (short form /tsn)

/TargetTimeout:<int>
     Specifies the timeout for establishing a connection to the target database in seconds. For Azure AD, it is recommended that this value be greater than or equal to 30 seconds. (short form /tt)

/TargetTrustServerCertificate:[True|False]
     Specifies whether to use TLS to encrypt the target database connection and bypass walking the certificate chain to validate trust. (short form /ttsc)

/TargetUser:<string>
     For SQL Server Auth scenarios, defines the SQL Server user to use to access the target database. (short form /tu)

/TenantId:<string>
     Represents the Azure AD tenant ID or domain name. This option is required to support guest or imported Azure AD users as well as Microsoft accounts such as outlook.com, hotmail.com, or live.com. If this parameter
     is omitted, the default tenant ID for Azure AD will be used, assuming that the authenticated user is a native user for this AD. However, in this case any guest or imported users and/or Microsoft accounts hosted
     in this Azure AD are not supported and the operation will fail. (short form /tid)

/ThreadMaxStackSize:<int>
     Specifies the maximum size in megabytes for the thread running the SqlPackage.exe action. This option should only be used when encountering stack overflow exceptions that occur when parsing very large TSQL
     statements. (short form /tmss)

/UniversalAuthentication:[True|False]
     Specifies if Universal Authentication should be used. When set to True, the interactive authentication protocol is activated supporting MFA. This option can also be used for Azure AD authentication without MFA,
     using an interactive protocol requiring the user to enter their username and password or integrated authentication (Windows credentials). When /UniversalAuthentication is set to True, no Azure AD authentication
     can be specified in SourceConnectionString (/scs). When /UniversalAuthentication is set to False, Azure AD authentication must be specified in SourceConnectionString (/scs). (short form /ua)

/Variables:{PropertyName}={Value}
     Specifies a name value pair for an action-specific variable; {VariableName}={Value}. The DACPAC file contains the list of valid SQLCMD variables. An error results if a value is not provided for every variable.
     (short form /v)


# sqlpackage /a:Import /tsn:localhost /tdn:sfwmdc43 /tu:sa /tp:YourS3cureP@ss /sf:/tmp/db.bacpac
Publishing to database 'sfwmdc43' on server '.'.
*** Cannot create a DAC package from a file that contains exported data.
Time elapsed 0:00:00.29
# sqlpackage /a:Import /tsn:. /tdn:sfwmdc43 /tu:sa /tp:YourS3cureP@ss /sf:/tmp/db.dacpac
*** The SourceFile argument must refer to a file with a '.bacpac' extension.
# cd /tmp
# ls
355cfcfe-7b6f-4371-9692-9fab963a3fca  MSBuildTemproot  NuGetScratch  cfba4c46-657c-40b6-a0a1-d9addda2c1c4  db.dacpac
# mv db.dacpac db.bacpac
# ls
355cfcfe-7b6f-4371-9692-9fab963a3fca  MSBuildTemproot  NuGetScratch  cfba4c46-657c-40b6-a0a1-d9addda2c1c4  db.bacpac
# sqlpackage /a:Import /tsn:localhost:1422 /tdn:sfwmdc43 /tu:sa /tp:YourS3cureP@ss /sf:/tmp/db.bacpac
 sqlpackage /a:Import /tsn:localhost /tdn:sfwmdc43 /tu:sa /tp:YourS3cureP@ss /sf:/tmp/db.bacpac
 sqlpackage /a:Import /tsn:localhost,1422 /tdn:sfwmdc43 /tu:sa /tp:YourS3cureP@ss /sf:/tmp/db.bacpac
 sqlpackage /a:Import /tsn:localhost,1422 /tdn:sfwmdc43 /tu:sa /tp:YourS3cureP@ss /sf:/tmp/db.bacpac
 sqlpackage /a:Import /tsn:127.17.0.6,1422 /tdn:sfwmdc43 /tu:sa /tp:YourS3cureP@ss /sf:/tmp/db.bacpac
Importing to database 'sfwmdc43' on server '.'.
Creating deployment plan
Initializing deployment
*** Changes to connection setting default values were incorporated in a recent release.  More information is available at https://aka.ms/dacfx-connection
*** Error importing database:Could not import package.
Unable to connect to target server '.'. Please verify the connection information such as the server name, login credentials, and firewall rules for the target server.
A connection was successfully established with the server, but then an error occurred during the pre-login handshake. (provider: TCP Provider, error: 35 - An internal exception was caught)
The remote certificate was rejected by the provided RemoteCertificateValidationCallback.
*** The settings for connection encryption or server certificate trust may lead to connection failure if the server is not properly configured.
Time elapsed 0:00:00.64
# export DOTNET_ROOT=$HOME/.dotnetexport DOTNET_ROOT=$HOME/.dotnetexport DOTNET_ROOT=$HOME/.dotnetexport DOTNET_ROOT=$HOME/.dotnetexport DOTNET_ROOT=$HOME/.dotnetexport DOTNET_ROOT=$HOME/.dotnet
# :sfwmdc43